(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{806:function(e,t,s){"use strict";s.r(t);var a=s(6),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"yml-sort-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yml-sort-keys"}},[e._v("#")]),e._v(" yml/sort-keys")]),e._v(" "),s("blockquote",[s("p",[e._v("require mapping keys to be sorted")])]),e._v(" "),s("ul",[s("li",[e._v("🔧 The "),s("code",[e._v("--fix")]),e._v(" option on the "),s("a",{attrs:{href:"https://eslint.org/docs/user-guide/command-line-interface#fixing-problems",target:"_blank",rel:"noopener noreferrer"}},[e._v("command line"),s("OutboundLink")],1),e._v(" can automatically fix some of the problems reported by this rule.")])]),e._v(" "),s("h2",{attrs:{id:"rule-details"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[e._v("#")]),e._v(" 📖 Rule Details")]),e._v(" "),s("p",[e._v("This rule checks all pair definitions of mapping and verifies that all keys are sorted alphabetically or specified order.")]),e._v(" "),s("eslint-code-block",{attrs:{fix:""}},[s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# eslint yml/sort-keys: 'error'")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ✓ GOOD")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("good")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ✗ BAD")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("bad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n")])])])]),e._v(" "),s("h2",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" 🔧 Options")]),e._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("jsonc/sort-keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" error\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# For example, a definition for eslintrc")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("pathPattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ^$ "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Hits the root properties")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" root\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" plugins\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" extends\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" env\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" rules\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" overrides\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ...")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("pathPattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ^env$\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" asc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("pathPattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ^rules$\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" asc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# ...")]),e._v("\n")])])]),s("p",[e._v("The option receives multiple objects with the following properties:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("pathPattern")]),e._v(" (Required) ... Defines the regular expression pattern of paths to which you want to enforce the order. If you want to apply to the top level, define "),s("code",[e._v('"^$"')]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("hasProperties")]),e._v(" ... Defines an array of property names. Checks only objects that have the defined properties.")]),e._v(" "),s("li",[s("code",[e._v("order")]),e._v(" (Required) ... Defines how to enforce the order. You can use an object or an array.\n"),s("ul",[s("li",[e._v("Array ... Defines an array of properties to enforce the order.\n"),s("ul",[s("li",[e._v("String ... Defines the property name.")]),e._v(" "),s("li",[e._v("Object ... The object has the following properties:\n"),s("ul",[s("li",[s("code",[e._v("keyPattern")]),e._v(" ... Defines a pattern to match the property name. Default is to match all.")]),e._v(" "),s("li",[s("code",[e._v("order")]),e._v(" ... The object has the following properties:\n"),s("ul",[s("li",[s("code",[e._v("type")]),e._v(":\n"),s("ul",[s("li",[s("code",[e._v('"asc"')]),e._v(" ... Enforce properties to be in ascending order. This is default.")]),e._v(" "),s("li",[s("code",[e._v('"desc"')]),e._v(" ... Enforce properties to be in descending order.")])])]),e._v(" "),s("li",[s("code",[e._v("caseSensitive")]),e._v(" ... If "),s("code",[e._v("true")]),e._v(", enforce properties to be in case-sensitive order. Default is "),s("code",[e._v("true")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("natural")]),e._v(" ... If "),s("code",[e._v("true")]),e._v(", enforce properties to be in natural order. Default is "),s("code",[e._v("false")]),e._v(".")])])])])])])]),e._v(" "),s("li",[e._v("Object ... The object has the following properties:\n"),s("ul",[s("li",[s("code",[e._v("type")]),e._v(":\n"),s("ul",[s("li",[s("code",[e._v('"asc"')]),e._v(" ... Enforce properties to be in ascending order. This is default.")]),e._v(" "),s("li",[s("code",[e._v('"desc"')]),e._v(" ... Enforce properties to be in descending order.")])])]),e._v(" "),s("li",[s("code",[e._v("caseSensitive")]),e._v(" ... If "),s("code",[e._v("true")]),e._v(", enforce properties to be in case-sensitive order. Default is "),s("code",[e._v("true")]),e._v(".")]),e._v(" "),s("li",[s("code",[e._v("natural")]),e._v(" ... If "),s("code",[e._v("true")]),e._v(", enforce properties to be in natural order. Default is "),s("code",[e._v("false")]),e._v(".")])])])])]),e._v(" "),s("li",[s("code",[e._v("minKeys")]),e._v(" ... Specifies the minimum number of keys that an object should have in order for the object's unsorted keys to produce an error. Default is "),s("code",[e._v("2")]),e._v(", which means by default all objects with unsorted keys will result in lint errors.")])]),e._v(" "),s("p",[e._v("You can also define options in the same format as the "),s("a",{attrs:{href:"https://eslint.org/docs/rules/sort-keys",target:"_blank",rel:"noopener noreferrer"}},[e._v("sort-keys"),s("OutboundLink")],1),e._v(" rule.")]),e._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("jsonc/sort-keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" error\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" asc\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("caseSensitive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("natural")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("false")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("minKeys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v("\n")])])]),s("p",[e._v("See "),s("a",{attrs:{href:"https://eslint.org/docs/rules/sort-keys#options",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),s("OutboundLink")],1),e._v(" for details.")]),e._v(" "),s("h2",{attrs:{id:"related-rules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#related-rules"}},[e._v("#")]),e._v(" 👫 Related rules")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://eslint.org/docs/rules/sort-keys",target:"_blank",rel:"noopener noreferrer"}},[e._v("sort-keys"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" 🚀 Version")]),e._v(" "),s("p",[e._v("This rule was introduced in eslint-plugin-yml v0.3.0")]),e._v(" "),s("h2",{attrs:{id:"implementation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" 🔍 Implementation")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-yml/blob/master/src/rules/sort-keys.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rule source"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-yml/blob/master/tests/src/rules/sort-keys.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("Test source"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-yml/tree/master/tests/fixtures/rules/sort-keys",target:"_blank",rel:"noopener noreferrer"}},[e._v("Test fixture sources"),s("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=r.exports}}]);